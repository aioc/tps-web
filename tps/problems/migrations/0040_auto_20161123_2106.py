# -*- coding: utf-8 -*-
# Generated by Django 1.9.7 on 2016-11-23 21:06
from __future__ import unicode_literals

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import multiselectfield.db.fields


class Migration(migrations.Migration):

    dependencies = [
        ('tasks', '0001_initial'),
        ('file_repository', '0006_auto_20161108_2010'),
        ('problems', '0039_auto_20161121_0950'),
    ]

    operations = [
        migrations.CreateModel(
            name='TestCaseGeneration',
            fields=[
                ('task_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='tasks.Task')),
            ],
            bases=('tasks.task',),
        ),
        migrations.RenameField(
            model_name='testcase',
            old_name='_output_file',
            new_name='_output_generated_file',
        ),
        migrations.RemoveField(
            model_name='testcase',
            name='_input_file',
        ),
        migrations.AddField(
            model_name='testcase',
            name='_input_generated_file',
            field=models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='file_repository.FileModel'),
        ),
        migrations.AddField(
            model_name='testcase',
            name='_input_generation_log',
            field=models.TextField(default='', verbose_name='input generation log'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='testcase',
            name='_input_generation_successful',
            field=models.NullBooleanField(verbose_name='successful input generation'),
        ),
        migrations.AddField(
            model_name='testcase',
            name='_output_generation_log',
            field=models.TextField(default='', verbose_name='output generation log'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='testcase',
            name='_output_generation_successful',
            field=models.NullBooleanField(verbose_name='successful output generation'),
        ),
        migrations.AlterField(
            model_name='solution',
            name='language',
            field=models.CharField(max_length=20, null=True, verbose_name='language'),
        ),
        migrations.AlterField(
            model_name='solution',
            name='name',
            field=models.CharField(max_length=255, validators=[django.core.validators.RegexValidator(code='invalid_file_name', inverse_match=False, message='please enter a valid file name.', regex='^[a-zA-Z0-9_\\-](?:\\.|[a-zA-Z0-9_\\-])*$')], verbose_name='name'),
        ),
        migrations.AlterField(
            model_name='solution',
            name='should_be_present_verdicts',
            field=multiselectfield.db.fields.MultiSelectField(blank=True, choices=[('invalid_submission', 'Invalid Submission'), ('compilation_failed', 'Compilation Failed'), ('crashed', 'Crashed'), ('nonzero_exit_code', 'Exited with non-zero exit code'), ('time_limit_exceeded', 'Time limit exceeded'), ('memory_limit_exceeded', 'Memory limit exceeded'), ('ok', 'OK')], max_length=108),
        ),
        migrations.AlterField(
            model_name='solution',
            name='should_not_be_present_verdicts',
            field=multiselectfield.db.fields.MultiSelectField(blank=True, choices=[('invalid_submission', 'Invalid Submission'), ('compilation_failed', 'Compilation Failed'), ('crashed', 'Crashed'), ('nonzero_exit_code', 'Exited with non-zero exit code'), ('time_limit_exceeded', 'Time limit exceeded'), ('memory_limit_exceeded', 'Memory limit exceeded'), ('ok', 'OK')], max_length=108),
        ),
        migrations.AlterField(
            model_name='solutionrunresult',
            name='verdict',
            field=models.CharField(choices=[('invalid_submission', 'Invalid Submission'), ('compilation_failed', 'Compilation Failed'), ('crashed', 'Crashed'), ('nonzero_exit_code', 'Exited with non-zero exit code'), ('time_limit_exceeded', 'Time limit exceeded'), ('memory_limit_exceeded', 'Memory limit exceeded'), ('ok', 'OK')], max_length=21, null=True, verbose_name='verdict'),
        ),
        migrations.AlterUniqueTogether(
            name='solution',
            unique_together=set([('problem', 'name')]),
        ),
        migrations.AlterUniqueTogether(
            name='solutionrunresult',
            unique_together=set([('solution_run', 'solution', 'testcase')]),
        ),
        migrations.AddField(
            model_name='testcasegeneration',
            name='testcase',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='problems.TestCase'),
        ),
    ]
