# -*- coding: utf-8 -*-
# Generated by Django 1.9.7 on 2016-11-25 18:37
from __future__ import unicode_literals

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import multiselectfield.db.fields


class Migration(migrations.Migration):

    replaces = [('problems', '0042_auto_20161125_1007'), ('problems', '0043_auto_20161125_1109'), ('problems', '0044_auto_20161125_1138'), ('problems', '0045_remove_validatorresult_exit_code'), ('problems', '0046_auto_20161125_1502'), ('problems', '0047_auto_20161125_1830'), ('problems', '0048_auto_20161125_1832')]

    dependencies = [
        ('problems', '0041_auto_20161123_2148'),
    ]

    operations = [
        migrations.RemoveField(
            model_name='testcase',
            name='_input_generator',
        ),
        migrations.AddField(
            model_name='testcase',
            name='_input_generator_name',
            field=models.CharField(blank=True, max_length=256, null=True, verbose_name='generator'),
        ),
        migrations.RemoveField(
            model_name='testcase',
            name='subtasks',
        ),
        migrations.AddField(
            model_name='testcase',
            name='subtasks',
            field=models.ManyToManyField(related_name='testcases', to='problems.Subtask'),
        ),
        migrations.AddField(
            model_name='validatorresult',
            name='validation_message',
            field=models.TextField(default='', verbose_name='validation message'),
            preserve_default=False,
        ),
        migrations.RemoveField(
            model_name='validatorresult',
            name='exit_code',
        ),
        migrations.RemoveField(
            model_name='solutionrunresult',
            name='checker_exit_code',
        ),
        migrations.RemoveField(
            model_name='solutionrunresult',
            name='solution_exit_code',
        ),
        migrations.AddField(
            model_name='solutionrunresult',
            name='checker_execution_message',
            field=models.TextField(null=True, verbose_name='checker execution message'),
        ),
        migrations.RemoveField(
            model_name='testcase',
            name='_solution',
        ),
        migrations.AddField(
            model_name='problemdata',
            name='model_solution',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='problems.Solution', verbose_name='model solution'),
        ),
        migrations.AlterField(
            model_name='solution',
            name='should_be_present_verdicts',
            field=multiselectfield.db.fields.MultiSelectField(blank=True, choices=[('invalid_submission', 'Invalid Submission'), ('compilation_failed', 'Compilation Failed'), ('runtime_error', 'Runtime error'), ('time_limit_exceeded', 'Time limit exceeded'), ('memory_limit_exceeded', 'Memory limit exceeded'), ('ok', 'OK')], max_length=96),
        ),
        migrations.AlterField(
            model_name='solution',
            name='should_not_be_present_verdicts',
            field=multiselectfield.db.fields.MultiSelectField(blank=True, choices=[('invalid_submission', 'Invalid Submission'), ('compilation_failed', 'Compilation Failed'), ('runtime_error', 'Runtime error'), ('time_limit_exceeded', 'Time limit exceeded'), ('memory_limit_exceeded', 'Memory limit exceeded'), ('ok', 'OK')], max_length=96),
        ),
        migrations.AlterField(
            model_name='solutionrunresult',
            name='verdict',
            field=models.CharField(choices=[('invalid_submission', 'Invalid Submission'), ('compilation_failed', 'Compilation Failed'), ('runtime_error', 'Runtime error'), ('time_limit_exceeded', 'Time limit exceeded'), ('memory_limit_exceeded', 'Memory limit exceeded'), ('ok', 'OK')], max_length=21, null=True, verbose_name='verdict'),
        ),
        migrations.AlterField(
            model_name='checker',
            name='name',
            field=models.CharField(max_length=50, validators=[django.core.validators.RegexValidator(code='invalid_file_name', inverse_match=False, message='please enter a valid file name.', regex='^[a-zA-Z0-9_\\-](?:\\.|[a-zA-Z0-9_\\-])*$')], verbose_name='name'),
        ),
        migrations.AlterField(
            model_name='inputgenerator',
            name='name',
            field=models.CharField(max_length=50, validators=[django.core.validators.RegexValidator(code='invalid_file_name', inverse_match=False, message='please enter a valid file name.', regex='^[a-zA-Z0-9_\\-](?:\\.|[a-zA-Z0-9_\\-])*$')], verbose_name='name'),
        ),
        migrations.AlterField(
            model_name='validator',
            name='name',
            field=models.CharField(max_length=50, validators=[django.core.validators.RegexValidator(code='invalid_file_name', inverse_match=False, message='please enter a valid file name.', regex='^[a-zA-Z0-9_\\-](?:\\.|[a-zA-Z0-9_\\-])*$')], verbose_name='name'),
        ),
    ]
